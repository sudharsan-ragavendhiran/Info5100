/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeData;

/**
 *
 * @author sudharsan
 */
public class viewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form viewJPanel
     */ 
    EmployeeData empData;
    public viewJPanel(EmployeeData empData) {
        initComponents();
        this.empData = empData;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        viewButton = new javax.swing.JButton();
        viewButton1 = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        searchComboBox = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Apple Braille", 1, 14)); // NOI18N
        jLabel1.setText("View Employee");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "EmployeeID", "Position", "Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        viewButton1.setText("Delete");
        viewButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButton1ActionPerformed(evt);
            }
        });

        searchTextField.setToolTipText("Enter ");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Employee Id", "Level", "Position" }));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(34, 34, 34)
                .addComponent(viewButton)
                .addGap(34, 34, 34)
                .addComponent(viewButton1)
                .addGap(146, 146, 146))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(searchButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewButton)
                    .addComponent(viewButton1)
                    .addComponent(jButton2))
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex= jTable1.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row update/ delete");
        }
        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
        Employee selectedRow= (Employee) model.getValueAt(selectedRowIndex, 0);
       
        
        viewJFrame viewFrame = new viewJFrame(selectedRow);
        viewFrame.setVisible(true);
        
    }//GEN-LAST:event_viewButtonActionPerformed

    private void viewButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex= jTable1.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to update/ delete");
        }
        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
        Employee selectedRow= (Employee) model.getValueAt(selectedRowIndex, 0);
        
        empData.deleteEmp(selectedRow);
        JOptionPane.showMessageDialog(this, "Selected row deleted");
        populateTable();
        
    }//GEN-LAST:event_viewButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchKeyword = searchTextField.getText();
        int col = searchComboBox.getSelectedIndex();
        //empData.SearchEmpData(ColName, searchKeyword);
        searchTable(col,searchKeyword);
        //SpopulateTable();
        
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JButton viewButton;
    private javax.swing.JButton viewButton1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        //populateDataTable = empData.getEmpData();
        for(Employee emp : empData.getEmpData()){
            Object[] row= new Object[4];
            row[0] = emp;
            //row[0] = emp.getEmployeeName();
            row[1] = emp.getEmployeeId();
            row[2] = emp.getEmployeePosition();
            row[3] = emp.getEmployeeLevel();
            
            model.addRow(row);
        }
        
    }
//        private void SpopulateTable() {
//        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
//        model.setRowCount(0);
//        //populateDataTable = empData.getEmpData();
//        for(Employee emp : empData.getEmpData()){
//            Object[] row= new Object[4];
//            row[0] = emp;
//            //row[0] = emp.getEmployeeName();
//            row[1] = emp.getEmployeeId();
//            row[2] = emp.getEmployeePosition();
//            row[3] = emp.getEmployeeLevel();
//            
//            model.addRow(row);
//        }
//        
//    }
        private void searchTable(int col, String name) {
        
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            for(Employee emp : empData.SearchEmpData(col, name)){
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getEmployeeId();
                row[2] = emp.getEmployeePosition();
                row[3] = emp.getEmployeeLevel();

                model.addRow(row);
                //populateTable();
            }
        }
        
//    private void Search() {
//        DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
//        model.setRowCount(0);
//        for(Employee emp : empData.getEmpData()){
//            Object[] row= new Object[4];
//            row[0] = emp;
//            //row[0] = emp.getEmployeeName();
//            row[1] = emp.getEmployeeId();
//            row[2] = emp.getEmployeePosition();
//            row[3] = emp.getEmployeeLevel();
//            
//            model.addRow(row);
//        }
//        
    //}
}
